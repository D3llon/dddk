<?php

namespace App\Models;

use Backpack\CRUD\app\Models\Traits\CrudTrait;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;
use Venturecraft\Revisionable\RevisionableTrait;

class UserDog extends Model
{
    use HasFactory, CrudTrait, SoftDeletes, RevisionableTrait;

    protected $guarded = ['id'];
    protected $revisionCreationsEnabled = true;

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        static::created(static function (UserDog $userDog) {
            $user = $userDog->user;
            if ($user->dogs) {
                $user->update(['owner' => true]);
            } else {
                $user->update(['owner' => false]);
            }
        });
        static::updating(static function (UserDog $userDog) {
            $oldUser = User::find($userDog->getOriginal('user_id'));
            if ($oldUser->dogs->where('id', '!=', $userDog->id)->count() > 0) {
                $oldUser->update(['owner' => true]);
            } else {
                $oldUser->update(['owner' => false]);
            }

            $userDog->user->update(['owner' => true]);
        });
    }

    public function user()
    {
        return $this->belongsTo(User::class);
    }

    public function dog()
    {
        return $this->belongsTo(Dog::class);
    }
}
